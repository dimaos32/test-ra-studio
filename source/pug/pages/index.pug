extends ../base/layout

block data
  include ../data/intro
  include ../data/series
  include ../data/video
  include ../data/custom-design
  include ../data/production
  include ../data/exclusive-design
  include ../data/ask-cost
  include ../data/partners
  include ../data/production-about
  include ../data/faq

block variables
  - const title = "Platforma Home" //- на страницах кроме главной используйте О нас — ProjectName
  - const wrapperMods = ""
  - const hasHeader = true
  - const headerMods = ""
  - const hasFooter = true
  - const footerMods = ""
  - const currentPage = "main" //- для остальных страниц пишем пустую строку или индекс активного headerLinks

block main
  main
    section.intro
      .intro__slider
        +intro-slider(intro.slides)
      .container
        .intro__page-title
          .intro__logo
            img(src="img/svg/logo-intro.svg" width="617" height="50" alt="Логотип Platforma Home")
          h1.intro__title=intro.title

    section.series
      .container
        .series__intro
          h2.series__title=series.title
          p.series__desc=series.desc
          a.link.link--accent.series__see-all-link(href=series.seeAllLink.href)=series.seeAllLink.text
        .series__slider
          +series-slider(series.slides)

    section.video
      h2.visually-hidden=video.title
      .video__wrapper
        +img(video.cover.path, video.cover.name, video.cover.type, 1920, 770, video.cover.altText)
        button.btn-round.btn-round--control.video__play-btn(type="video" aria-label="Воспроизвести видео")
          +icon("icon-video-play", 15, 15)

    section.custom-design
      .container
        .custom-design__wrapper
          .custom-design__slider
            +vertical-photo-slider(customDesign.slides)
          .custom-design__intro
            h2.custom-design__title=customDesign.title
            p.custom-design__desc=customDesign.desc
        p.citation.custom-design__citation=customDesign.citation

    section.production
      .container
        .production__wrapper
          h2.production__title=production.title
          p.production__desc=production.desc
      .production__cover
        +img(production.cover.path, production.cover.name, production.cover.type, 1920, 750, production.cover.altText)
      .production__features-wrapper
        .container
          ul.production__features
            each feature in production.features
              -const {quantity, unit, desc} = feature
              li.production__feature
                p.production__feature-title
                  spany=quantity
                  if unit
                    span.production__feature-unit=unit
                p.production__feature-desc=desc

    section.exclusive-design
      .container.exclusive-design__container
        .exclusive-design__content
          .exclusive-design__intro
            h2.exclusive-design__title=exclusiveDesign.title
            p.exclusive-design__desc=exclusiveDesign.desc
          ul.exclusive-design__awards
            each award in exclusiveDesign.awards
              li.exclusive-design__award=award
            li.exclusive-design__award.exclusive-design__award--not-award
              a.btn-round.btn-round--inverted(href=exclusiveDesign.partner.href)
                span=exclusiveDesign.partner.text
        .exclusive-design__slider
          +photo-slider(exclusiveDesign.slides)

    section.ask-cost
      .container
        h2.ask-cost__title=askCost.title
        .ask-cost__form
          form(action="#" method="POST")
            .ask-cost__input-group
              .ask-cost__input
                input(type="text" id="user-name" name="user-name" placeholder=askCost.form.name required)
                label.visually-hidden(for="user-name")=askCost.form.name
              .ask-cost__input
                input(type="tel" id="user-phone" name="user-phone" placeholder=askCost.form.phone required)
                label.visually-hidden(for="user-phone")=askCost.form.phone
            .ask-cost__input-group.ask-cost__input-group--last
              .ask-cost__input
                input(type="text" id="user-messge" name="user-messge" placeholder=askCost.form.messge required)
                label.visually-hidden(for="user-messge")=askCost.form.messge
            .ask-cost__input-file
              input.visually-hidden(type="file" id="user-file" name="user-file")
              label.ask-cost__label-file(for="user-file")
                +icon("icon-clip", 20, 19)
                span=askCost.form.file
            .ask-cost__submit-wrapper
              p.ask-cost__submit-annotation=askCost.form.submit.annotation
              button.btn-round.ask-cost__submit-btn(type="submit")=askCost.form.submit.btnText

    section.partners
      .container.partners__container
        .partners__content
          .partners__content-inner
            h2.partners__title=partners.title
            .partners__desc
              each item in partners.desc
                p=item
        ul.partners__list
          each partner in partners.partners
            - const {name, logo, linkSrc} = partner
            li.partners__item
              a.link.partners__link(href=linkSrc target="_blank" rel="nofollow noopener" aria-label=name)
                +icon(logo.name, logo.width, logo.height)

    section.production-about
      .container
        .production-about__wrapper
          .production-about__slider
            +vertical-photo-slider(productionAbout.slides)
          .production-about__intro
            h2.production-about__title=productionAbout.title
            each paragraph in productionAbout.desc
              p.production-about__desc=paragraph

    section.faq
      .container
        h2.faq__title=faq.title
        ul.faq__questions(data-accordion="parent", data-type="single")
          each questionItem in faq.questions
            - const {question, answer} = questionItem
            li.faq__question-wrapper(data-accordion="element")
              button.faq__question-btn(type="button" data-accordion="button")
                span=question
              .faq__question(data-accordion="content")
                each paragraph in answer
                  p=paragraph

block modals
